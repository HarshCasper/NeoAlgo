'''
Write a program to print all the Lucky Numbers upto the input number.
Description:
In number theory, a lucky number is a natural number in a set which is generated by a certain "sieve". This sieve is similar to the Sieve of Eratosthenes that generates the 
primes, but it eliminates numbers based on their position in the remaining set, instead of their value (or position in the initial set of natural numbers
Start with a rundown of numbers beginning with 1:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
Consistently number (every much number) in the rundown is dispensed with, leaving just the odd numbers:
1 3 5 7 9 11 13 15 17 19 21 23 25
The main number excess in the rundown after 1 is 3, so every third number which stays in the rundown (only one out of every odd various of 3) is dispensed with. The first of 
these is 5:
1 3 7 9 13 15 19 21 25
The following enduring number is presently 7, so every seventh leftover number is disposed of. The first of these is 19:
1 3 7 9 13 15 21 25
Keep eliminating the nth leftover numbers, where n is the following number in the rundown after the last surviving number. Next in this model is 9.
One way that the application of the procedure differs from that of the Sieve of Eratosthenes is that for n being the number being multiplied on a specific pass, the first 
number eliminated on the pass is the n-th remaining number that has not yet been eliminated, as opposed to the number 2n. That is to say, the list of numbers this sieve counts 
through is different on each pass (for example 1, 3, 7, 9, 13, 15, 19... on the third pass), whereas in the Sieve of Eratosthenes, the sieve always counts through the entire
original list (1, 2, 3...).
At the point when this method has been done totally, the leftover whole numbers are the lucky numbers:
1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, 87, 93, 99, 105, 111, 115, 127, 129, 133, 135, 141, 151, 159, 163, 169, 171, 189, 193, 195, 201, 205,
211, 219, 223, 231, 235, 237, 241, 259, 261, 267, 273, 283, 285, 289, 297, ...)
'''
def lucky(nos):
        odds = list(range(1, nos + 1, 2)) #list of odd numbers
        j = 1                             #iterator variable
        while j <= len(odds) - 1 and odds[j] <= len(odds):
                odds = [Li for i, Li in enumerate(odds) if (i + 1) % odds[j]] #counting and adding the lucky numbers in the list
                j += 1                    #incrementing the variable
        return odds
#Driver code
if __name__ == "__main__":
        n=int(input())                  #User input
        LuckyNos=lucky(n)               #Function Call
        print(LuckyNos)
        
'''
EX1:
input=100
output=[1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, 87, 93, 99]
EX2:
input=300
output=[1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, 87, 93, 99, 105, 111, 115, 127, 129, 133, 135, 141, 151, 159, 163, 169, 171, 189, 193, 195,
201, 205, 211, 219, 223, 231, 235, 237, 241, 259, 261, 267, 273, 283, 285, 289, 297]

Time Complexity : O(n^2)
Space Complexity : O(n)
'''
